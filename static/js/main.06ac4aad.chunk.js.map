{"version":3,"sources":["components/Investmentcard.js","components/Investment.js","components/Listcard.js","components/Watchlist.js","App.js","reportWebVitals.js","index.js"],"names":["Investmentcard","data","className","returnOfInvestment","name","bought","currency","currentPrice","Investments","showlist","useState","investments","setInvestments","getInvestments","a","fetch","res","json","useEffect","setInterval","undefined","map","Listcard","Watchlist","watchlist","setWatchlist","getList","App","setshowlist","onClick","Investment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAaeA,EAXQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OACI,sBAAKC,UAAU,qCAAf,UACI,mBAAGA,UAAS,UAAKD,EAAKE,mBAAqB,EAAI,SAAS,QAAxD,SAAmEF,EAAKG,OACxE,8BAAIH,EAAKI,OAAT,IAAkBJ,EAAKK,YACvB,8BAAIL,EAAKM,aAAT,IAAwBN,EAAKK,YAC7B,8BAAIL,EAAKE,mBAAT,WCmDGK,EAtDK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAEIC,qBAFJ,mBAE3BC,EAF2B,KAEdC,EAFc,KAI5BC,EAAc,uCAAG,8BAAAC,EAAA,+EAEDC,MAAM,uDAFL,cAEbC,EAFa,gBAGAA,EAAIC,OAHJ,OAGbhB,EAHa,OAInBW,EAAeX,GAJI,uHAAH,qDAiBpB,OAPAiB,qBAAU,WACNL,IACAM,aAAY,WACZN,MACG,OACJ,SAEiBO,IAAhBT,EAEA,gCACI,sBAAKT,UAAU,2BAAf,UACI,qCACA,6CACA,8CACA,+CAEJ,mBAAGA,UAAU,eAAb,4BAKS,IAAbO,EACQ,KAIR,gCACI,sBAAKP,UAAU,2BAAf,UACI,qCACA,6CACA,8CACA,iDAEPS,EAAYU,KAAI,SAACpB,GAAD,OACf,cAAC,EAAD,CAAgBA,KAAMA,WC1CjBqB,EATE,SAAC,GAAc,IAAZrB,EAAW,EAAXA,KAChB,OACI,sBAAKC,UAAU,oCAAf,UACI,4BAAID,EAAKG,OACT,8BAAIH,EAAKM,aAAT,IAAwBN,EAAKK,gBCyC1BiB,EA1CG,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAAe,EACEC,qBADF,mBACzBc,EADyB,KACdC,EADc,KAI1BC,EAAO,uCAAG,8BAAAZ,EAAA,+EAEQC,MAAM,qDAFd,cAEJC,EAFI,gBAGSA,EAAIC,OAHb,OAGJhB,EAHI,OAIVwB,EAAaxB,GAJH,uHAAH,qDAiBb,OAPAiB,qBAAU,WACNQ,IACAP,aAAY,WACVO,MACC,OACJ,SAEeN,IAAdI,GAIAf,EAHQ,KAQR,gCACE,sBAAKP,UAAU,0BAAf,UACE,qCACA,yCAEDsB,EAAUH,KAAI,SAACpB,GAAD,OACb,cAAC,EAAD,CAAUA,KAAMA,WCXb0B,MAxBf,WAAgB,IAAD,EAEmBjB,oBAAS,GAF5B,mBAEND,EAFM,KAEImB,EAFJ,KAYb,OACE,gCACE,sBAAK1B,UAAU,SAAf,UACE,mBAAG2B,QAXiB,WACxBD,GAAY,IAUuB1B,UAAYO,EAAW,SAAS,GAA/D,yBACA,mBAAGoB,QARY,WACnBD,GAAY,IAOkB1B,UAAYO,EAAW,GAAG,SAApD,0BAEF,cAACqB,EAAD,CAAarB,SAAUA,IACvB,cAAC,EAAD,CAAWA,SAAUA,QCbZsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.06ac4aad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Investmentcard = ({ data }) => {\r\n    return (\r\n        <div className=\"investment-template invested-cards\">\r\n            <p className={`${data.returnOfInvestment > 0 ? 'profit':'loss'}`}>{data.name}</p>\r\n            <p>{data.bought} {data.currency}</p>\r\n            <p>{data.currentPrice} {data.currency}</p>\r\n            <p>{data.returnOfInvestment}%</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Investmentcard;","import React, { useState, useEffect } from 'react';\r\n\r\n//components\r\nimport Investmentcard from './Investmentcard'\r\n\r\nconst Investments = ({ showlist }) => {\r\n\r\n    const [investments, setInvestments] = useState();\r\n\r\n    const getInvestments = async () => {\r\n        try {\r\n        const res = await fetch('https://timothytimbol.herokuapp.com/api/investments');\r\n        const data = await res.json();\r\n        setInvestments(data);\r\n        } catch (err) {\r\n        throw err;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInvestments();\r\n        setInterval(() => {\r\n        getInvestments();\r\n        }, 5000);\r\n    }, [])\r\n\r\n    if (investments === undefined) {\r\n        return (\r\n        <div>\r\n            <div className=\"investment-template line\">\r\n                <p>Name</p>\r\n                <p>Price Bought</p>\r\n                <p>Current Price</p>\r\n                <p>Profit/Loss</p>\r\n            </div>\r\n            <p className=\"loading-text\">Loading...</p>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    if (showlist === false) {\r\n        return (null);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"investment-template line\">\r\n                <p>Name</p>\r\n                <p>Price Bought</p>\r\n                <p>Current Price</p>\r\n                <p>Profit / Loss</p>\r\n            </div>\r\n        {investments.map((data) => (\r\n          <Investmentcard data={data} />\r\n        ))} \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Investments","import React from 'react';\r\n\r\nconst Listcard = ({ data }) => {\r\n    return (\r\n        <div className=\"watchlist-template watchlist-card\">\r\n            <p>{data.name}</p>\r\n            <p>{data.currentPrice} {data.currency}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Listcard;","import React, { useState, useEffect } from 'react';\r\n\r\n//components\r\nimport Listcard from './Listcard';\r\n\r\nconst Watchlist = ({ showlist }) => {\r\n    const [watchlist, setWatchlist] = useState();\r\n\r\n    \r\n    const getList = async () => {\r\n        try {\r\n          const res = await fetch('https://timothytimbol.herokuapp.com/api/watchlist');\r\n          const data = await res.json();\r\n          setWatchlist(data);\r\n        } catch (err) {\r\n          throw err;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getList();\r\n        setInterval(() => {\r\n          getList();\r\n        }, 5000)\r\n    }, [])\r\n\r\n    if (watchlist === undefined) {\r\n        return (null);\r\n    }\r\n\r\n    if (showlist) {\r\n      return (null);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n          <div className=\"watchlist-template line\">\r\n            <p>Name</p>\r\n            <p>Price</p>\r\n          </div>\r\n          {watchlist.map((data) => (\r\n            <Listcard data={data} />\r\n          ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Watchlist;","import React, { useState } from 'react';\nimport './App.css';\n//components \nimport Investments from './components/Investment';\nimport Watchlist from './components/Watchlist';\n\nfunction App() {\n\n  const [showlist, setshowlist] = useState(true);\n\n  const investmentToggler = () => {\n    setshowlist(true);\n  }\n\n  const watchToggler = () => {\n    setshowlist(false);\n  }\n\n  return (\n    <div>\n      <div className=\"header\">\n        <p onClick={investmentToggler} className={(showlist ? 'active':'')}>Investments</p>\n        <p onClick={watchToggler} className={(showlist ? '':'active')}>Watchlist</p>\n      </div>\n      <Investments showlist={showlist} />\n      <Watchlist showlist={showlist} />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}